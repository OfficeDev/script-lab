// should pass more general tests
/**
 * *Insert Description here*
 * @CustomFunction
 */
function getRgb3(input: number): string {

}
/**
 * *Insert Description here*
 * @CustomFunction
 */
function getRgb6(input?: number): string {

}
/**
 * *Insert Description here*
 * @CustomFunction
 */
function getRgb8(...input: number[][]): string {

}// ok, function with one parameter "input" that's a number array
/**
 * *Insert Description here*
 * @CustomFunction
 */
function getRgb9(...input?: number[][]): string {

}// ok, function with one parameter "input" that's a number array
/**
 * *Insert Description here*
 * @CustomFunction
 */
function getRgb10(format: string, input: number[][]): string[][] {
    return [['foo']];
}// ok, function with two parameters "input" that's a number array

/**
 * *Insert Description here*
 * @CustomFunction
 */
function functionWith2DArraySyntax(x: Array<Array<number>>) : number {
    return 5;
}

// result
/*
[
	{
		"javascriptFunctionName": "getRgb3",
		"nonCapitalizedFullName": "TestNamespace.getRgb3",
		"status": "good",
		"errors": [],
		"metadata": {
			"description": "*Insert Description here*",
			"id": "TESTNAMESPACE.GETRGB3",
			"name": "TESTNAMESPACE.GETRGB3",
			"parameters": [
				{
					"name": "input",
					"type": "number"
				}
			],
			"result": {
				"type": "string"
			}
		}
	},
	{
		"javascriptFunctionName": "getRgb6",
		"nonCapitalizedFullName": "TestNamespace.getRgb6",
		"status": "good",
		"errors": [],
		"metadata": {
			"description": "*Insert Description here*",
			"id": "TESTNAMESPACE.GETRGB6",
			"name": "TESTNAMESPACE.GETRGB6",
			"parameters": [
				{
					"name": "input",
					"optional": true,
					"type": "number"
				}
			],
			"result": {
				"type": "string"
			}
		}
	},
	{
		"javascriptFunctionName": "getRgb8",
		"nonCapitalizedFullName": "TestNamespace.getRgb8",
		"status": "good",
		"errors": [],
		"metadata": {
			"description": "*Insert Description here*",
			"id": "TESTNAMESPACE.GETRGB8",
			"name": "TESTNAMESPACE.GETRGB8",
			"parameters": [
				{
					"dimensionality": "matrix",
					"name": "input",
					"optional": true,
					"type": "number"
				}
			],
			"result": {
				"type": "string"
			}
		}
	},
	{
		"javascriptFunctionName": "getRgb9",
		"nonCapitalizedFullName": "TestNamespace.getRgb9",
		"status": "good",
		"errors": [],
		"metadata": {
			"description": "*Insert Description here*",
			"id": "TESTNAMESPACE.GETRGB9",
			"name": "TESTNAMESPACE.GETRGB9",
			"parameters": [
				{
					"dimensionality": "matrix",
					"name": "input",
					"optional": true,
					"type": "number"
				}
			],
			"result": {
				"type": "string"
			}
		}
	},
	{
		"javascriptFunctionName": "getRgb10",
		"nonCapitalizedFullName": "TestNamespace.getRgb10",
		"status": "good",
		"errors": [],
		"metadata": {
			"description": "*Insert Description here*",
			"id": "TESTNAMESPACE.GETRGB10",
			"name": "TESTNAMESPACE.GETRGB10",
			"parameters": [
				{
					"name": "format",
					"type": "string"
				},
				{
					"dimensionality": "matrix",
					"name": "input",
					"type": "number"
				}
			],
			"result": {
				"dimensionality": "matrix",
				"type": "string"
			}
		}
	},
	{
		"javascriptFunctionName": "functionWith2DArraySyntax",
		"nonCapitalizedFullName": "TestNamespace.functionWith2DArraySyntax",
		"status": "good",
		"errors": [],
		"metadata": {
			"description": "*Insert Description here*",
			"id": "TESTNAMESPACE.FUNCTIONWITH2DARRAYSYNTAX",
			"name": "TESTNAMESPACE.FUNCTIONWITH2DARRAYSYNTAX",
			"parameters": [
				{
					"dimensionality": "matrix",
					"name": "x",
					"type": "number"
				}
			],
			"result": {
				"type": "number"
			}
		}
	}
]
*/
