parameters:
  - name: PackageDirectory
    displayName: Directory of the package where the package.json is
    type: string
  - name: PackageName
    displayName: Name of the package to be built
    type: string
  - name: SiteName
    displayName: Name of Azure Site
    type: string

steps:
  - checkout: self
    persistCredentials: true

  - task: Yarn@2
    displayName: 'Install'
    inputs:
      Arguments: 'install --frozen-lockfile'

  - task: Yarn@2
    displayName: 'Pre-CI Script'
    inputs:
      Arguments: 'pre-ci'

  - task: Yarn@2
    displayName: 'Post Install Script'
    inputs:
      Arguments: 'postinstall'

  - task: PowerShell@2
    displayName: 'Check diff on yarn install'
    inputs:
      targetType: 'inline'
      script: |
        # This makes sure that someone ran "yarn install" after merging their PR, and that the postinstall doesn't produce any diffs, which are annoying/confusing
        $diffs=$(git --no-pager diff HEAD --exit-code)

        if($diff -ne 0){
            Write-Host "Diffs were found"
            exit 1
        }
        else{
            Write-Host "No Diffs Found"
            exit 0
        }

  - task: Yarn@2
    displayName: 'Prettier'
    inputs:
      Arguments: 'prettier'

  - task: Yarn@2
    displayName: 'Lint'
    inputs:
      ProjectDirectory: '${{ parameters.PackageDirectory }}'
      Arguments: 'lint'

  - task: Yarn@2
    displayName: 'Test'
    inputs:
      ProjectDirectory: '${{ parameters.PackageDirectory }}'
      Arguments: 'citest'

  - task: Yarn@2
    displayName: 'Build'
    inputs:
      ProjectDirectory: '${{ parameters.PackageDirectory }}'
      Arguments: 'build'

  - script: yarn deploy
    displayName: 'Deploy Package'
    condition: and(succeeded(), eq(variables.isPR, false))
    env:
      HOME: '$(Agent.BuildDirectory)'
      BRANCH: '$(Build.SourceBranchName)'
      PULL_REQUEST: '$(isPR)'
      COMMIT_MESSAGE: '$(Build.SourceVersionMessage)'
      PACKAGE_LOCATION: '${{ parameters.PackageDirectory }}'
      PACKAGE_NAME: '${{ parameters.PackageName }}'
      SITE_NAME: '${{ parameters.SiteName}}'
      DEPLOYMENT_PASSWORD_SCRIPT_LAB_REACT_ALPHA: '$(DEPLOYMENT_PASSWORD_SCRIPT_LAB_REACT_ALPHA)'
      DEPLOYMENT_PASSWORD_SCRIPT_LAB_REACT_BETA: '$(DEPLOYMENT_PASSWORD_SCRIPT_LAB_REACT_BETA)'
      DEPLOYMENT_PASSWORD_SCRIPT_LAB_REACT_STAGING: '$(DEPLOYMENT_PASSWORD_SCRIPT_LAB_REACT_STAGING)'
      DEPLOYMENT_PASSWORD_SCRIPT_LAB_REACT_STORYBOOK_ALPHA: '$(DEPLOYMENT_PASSWORD_SCRIPT_LAB_REACT_STORYBOOK_ALPHA)'
      DEPLOYMENT_PASSWORD_SCRIPT_LAB_REACT_STORYBOOK_BETA: '$(DEPLOYMENT_PASSWORD_SCRIPT_LAB_REACT_STORYBOOK_BETA)'
      DEPLOYMENT_PASSWORD_SCRIPT_LAB_REACT_STORYBOOK_STAGING: '$(DEPLOYMENT_PASSWORD_SCRIPT_LAB_REACT_STORYBOOK_STAGING)'
      DEPLOYMENT_PASSWORD_SCRIPT_LAB_REACT_RUNNER_ALPHA: '$(DEPLOYMENT_PASSWORD_SCRIPT_LAB_REACT_RUNNER_ALPHA)'
      DEPLOYMENT_PASSWORD_SCRIPT_LAB_REACT_RUNNER_BETA: '$(DEPLOYMENT_PASSWORD_SCRIPT_LAB_REACT_RUNNER_BETA)'
      DEPLOYMENT_PASSWORD_SCRIPT_LAB_REACT_RUNNER_STAGING: '$(DEPLOYMENT_PASSWORD_SCRIPT_LAB_REACT_RUNNER_STAGING)'
      DEPLOYMENT_PASSWORD_SCRIPT_LAB_REACT_SERVER_ALPHA: '$(DEPLOYMENT_PASSWORD_SCRIPT_LAB_REACT_SERVER_ALPHA)'
      DEPLOYMENT_PASSWORD_SCRIPT_LAB_REACT_SERVER_BETA: '$(DEPLOYMENT_PASSWORD_SCRIPT_LAB_REACT_SERVER_BETA)'
      DEPLOYMENT_PASSWORD_SCRIPT_LAB_REACT_SERVER_STAGING: '$(DEPLOYMENT_PASSWORD_SCRIPT_LAB_REACT_SERVER_STAGING)'
